import csv
import collections

# this class is used to clean the raw .csv file and generate training/testing dataset
class create_pe_imports_set:
    feature_names = set()
    names_values = []

    def __init__(self):
        # open file 1
        try:
            file = open('new_output_2/behavior.csv', 'r')
            csv_reader_lines = csv.reader(file)
        except IOError:
            print('Cannot open file')

        data = []
        for row in csv_reader_lines:
            data.append(row)

        for i in range(0, len(data)):
            count = []
            for j in range(len(data[i])):
                count.append(data[i][j])
                self.feature_names.add(data[i][j])
            dic = collections.Counter(count)
            self.names_values.append(dic)

    def outputCsv(self):
        csvFile = open("new_behavior_analysis_2.csv", 'w', newline='')
        try:
            writer = csv.DictWriter(csvFile, fieldnames=list(self.feature_names), restval=0)
            writer.writeheader()
            for dic in self.names_values:
                writer.writerow(dic)
            print('The clean data file has been saved')
        finally:
            csvFile.close()

if __name__ == '__main__':
    dynamic_set = create_pe_imports_set()
    dynamic_set.outputCsv()