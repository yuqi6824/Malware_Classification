import csv
import collections

# this class is used to clean the raw .csv file and generate training/testing dataset
class create_pe_imports_set:
    feature_names = set()
    names_values = []

    def __init__(self):
        # open file 1
        try:
            file = open('new_output_2/imports.csv', 'r')
            csv_reader_lines = csv.reader(file)
        except IOError:
            print('Cannot open file')

        data = []
        for row in csv_reader_lines:
            data.append(row)

        for i in range(0, len(data)):
            if '#' in data[i][0]:
                if i != 0:
                    self.names_values.append(dic)
                dic = collections.defaultdict(lambda: 0)
                continue
            self.feature_names.add(data[i][0])
            dic[data[i][0]] += 1
            if i == len(data) - 1:
                self.names_values.append(dic)

    def outputCsv(self):
        csvFile = open("new_pe_imports_analysis_2.csv", 'w', newline='')
        try:
            writer = csv.DictWriter(csvFile, fieldnames=list(self.feature_names), restval=0)
            writer.writeheader()
            for dic in self.names_values:
                writer.writerow(dic)
            print('The clean data file has been saved')
        finally:
            csvFile.close()

if __name__ == '__main__':
    dynamic_set = create_pe_imports_set()
    dynamic_set.outputCsv()